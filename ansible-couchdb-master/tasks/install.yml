---
- name: add couchdb PPA repository
  become: yes
  apt_repository:
    repo: ppa:couchdb/stable

- name: install couchdb
  become: yes
  apt:
    name: couchdb
  register: couchdb_install

- name: stop couchdb
  become: yes
  service:
    name: couchdb
    state: stopped
  when: couchdb_install.changed

- name: change owner of couchdb executable
  file:
    state: file
    mode: 0770
    owner: couchdb
    group: couchdb
    path: /usr/bin/couchdb
  when: couchdb_install.changed

- name: secure couchdb installation
  file:
    state: directory
    mode: 0770
    owner: couchdb
    group: couchdb
    path: "{{ item }}"
  with_items:
    - /usr/lib/couchdb
    - /usr/share/couchdb
    - /etc/couchdb
  when: couchdb_install.changed

- name: start couchdb
  become: yes
  service:
    name: couchdb
    state: started
  when: couchdb_install.changed

- name: setup admins
  become: yes
  lineinfile:
    dest: /etc/couchdb/local.ini
    state: present
    line: "{{ item.key }} = {{ item.value }}"
    regexp: "^{{ item.key }} = "
    insertafter: "^\\[admins\\]$"
  with_dict: "{{ couchdb_admins }}"
  notify: restart couchdb

- name: create configuration file
  become: yes
  template:
    src: config.ini
    dest: /etc/couchdb/local.d/config.ini
    mode: 0770
    owner: couchdb
    group: couchdb
  notify: restart couchdb

- name: testing ansible
  docker_login:
      username: undefined # required. The username for the registry account
      password: undefined # required. The plaintext password for the registry account
      cacert_path: undefined # not required. Use a CA certificate when performing server verification by providing the path to a CA certificate file.,If the value is not specified in the task and the environment variable C(DOCKER_CERT_PATH) is set, the file C(ca.pem) from the directory specified in the environment variable C(DOCKER_CERT_PATH) will be used.
      tls_hostname: localhost # not required. When verifying the authenticity of the Docker Host server, provide the expected name of the server.,If the value is not specified in the task, the value of environment variable C(DOCKER_TLS_HOSTNAME) will be used instead. If the environment variable is not set, the default value will be used.
      docker_host: unix://var/run/docker.sock # not required. The URL or Unix socket path used to connect to the Docker API. To connect to a remote host, provide the TCP connection string. For example, 'tcp://192.0.2.23:2376'. If TLS is used to encrypt the connection, the module will automatically replace 'tcp' in the connection URL with 'https'.,If the value is not specified in the task, the value of environment variable C(DOCKER_HOST) will be used instead. If the environment variable is not set, the default value will be used.
      tls_verify: false # not required. Secure the connection to the API by using TLS and verifying the authenticity of the Docker host server.,If the value is not specified in the task, the value of environment variable C(DOCKER_TLS_VERIFY) will be used instead. If the environment variable is not set, the default value will be used.
      cert_path: undefined # not required. Path to the client's TLS certificate file.,If the value is not specified in the task and the environment variable C(DOCKER_CERT_PATH) is set, the file C(cert.pem) from the directory specified in the environment variable C(DOCKER_CERT_PATH) will be used.
      tls: false # not required. Secure the connection to the API by using TLS without verifying the authenticity of the Docker host server.,If the value is not specified in the task, the value of environment variable C(DOCKER_TLS) will be used instead. If the environment variable is not set, the default value will be used.
      config_path: ~/.docker/config.json # not required. Custom path to the Docker CLI configuration file.
      ssl_version: undefined # not required. Provide a valid SSL version number. Default value determined by ssl.py module.,If the value is not specified in the task, the value of environment variable C(DOCKER_SSL_VERSION) will be used instead.
      state: present # not required. choices: present;absent. This controls the current state of the user. C(present) will login in a user, C(absent) will log them out.,To logout you only need the registry server, which defaults to DockerHub.,Before 2.1 you could ONLY log in.,docker does not support 'logout' with a custom config file.
      key_path: undefined # not required. Path to the client's TLS key file.,If the value is not specified in the task and the environment variable C(DOCKER_CERT_PATH) is set, the file C(key.pem) from the directory specified in the environment variable C(DOCKER_CERT_PATH) will be used.
      timeout: 60 # not required. The maximum amount of time in seconds to wait on a response from the API.,If the value is not specified in the task, the value of environment variable C(DOCKER_TIMEOUT) will be used instead. If the environment variable is not set, the default value will be used.
      debug: false # not required. Debug mode
      registry_url: https://index.docker.io/v1/ # not required. The registry URL.
      email: undefined # not required. The email address for the registry account.
      api_version: auto # not required. The version of the Docker API running on the Docker Host. Defaults to the latest version of the API supported by docker-py.,If the value is not specified in the task, the value of environment variable C(DOCKER_API_VERSION) will be used instead. If the environment variable is not set, the default value will be used.
      reauthorize: no # not required. Refresh existing authentication found in the configuration file.
